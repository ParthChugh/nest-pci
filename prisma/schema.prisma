// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  firstName String?
  lastName  String?
  artists   Artist[]
  favorite  Favorite[]

  @@map("users")
}

model Album {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  link        String

  tracks    Track[]
  favorites Favorite[]

  artistId Int
  artist   Artist @relation(fields: [artistId], references: [id])

  @@map("albums")
}

model Track {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  link        String

  albumId   Int
  album     Album      @relation(fields: [albumId], references: [id])
  favorites Favorite[]

  @@map("tracks")
}

model Artist {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String?
  link        String

  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  albums    Album[]
  favorites Favorite[]

  @@map("artists")
}

model Favorite {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  albumId   Int?
  album     Album?   @relation(fields: [albumId], references: [id])
  trackId   Int?
  track     Track?   @relation(fields: [trackId], references: [id])
  artistId  Int?
  artist    Artist?  @relation(fields: [artistId], references: [id])
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])

  @@map("favorites")
}
